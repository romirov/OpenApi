openapi: 3.0.3
info:
  title: UI-Backend Organization-Employees API
  description: API for interaction between frontend and backend
  version: 1.0.0
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
tags:
  - name: organization
    description: Operations about organization
    externalDocs:
      description: Find out more
      url: http://swagger.io
  - name: employee
    description: Operations about employee
    externalDocs:
      description: Find out more about our store
      url: http://swagger.io
paths:
  /api/v1/organization:
    post:
      tags:
        - organization
      summary: Add a new organization
      description: Add a new organization
      operationId: addOrganization
      parameters:
        - name: organizationId
          description: organization ID
          schema:
            type: string
          in: path
          required: true
        - name: organizationName
          description: organization ID
          schema:
            type: string
          in: path
          required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
        '400':
          description: Invalid input
        '422':
          description: Validation exception
  delete:
    tags:
      - store
    summary: Delete all organizations
    description: For valid response no need to specify parameters
    operationId: deleteOrder
    responses:
      '400':
        description: Invalid ID supplied
      '404':
        description: Order not found

  /api/v1/organization/{organizationId}:
    put:
      tags:
        - organization
      summary: Update an existing organization
      description: Update an existing organization by Id
      operationId: updateOrganization
      parameters:
        - name: organizationId
          description: organization ID
          schema:
            type: string
          in: path
          requered: true
        - name: organizationName
          description: organization ID
          schema:
            type: string
          in: path
          requered: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
        '400':
          description: Invalid ID supplied
        '404':
          description: Organization not found
        '422':
          description: Validation exception
    get:
      tags:
        - organization
      summary: Finds Organization by ID
      description: Multiple status values can be provided with comma separated strings
      operationId: findOrganizationById
      parameters:
        - name: organizationId
          description: organization ID
          schema:
            type: string
          in: path
          required: true
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
        '400':
          description: Invalid status value
    delete:
      tags:
        - organization
      summary: Delete organization by ID
      description: For valid response try integer IDs with value < 1000. Anything above 1000 or nonintegers will generate API errors
      operationId: deleteOrganization
      parameters:
        - name: organizationId
          in: path
          description: ID of the organization that needs to be deleted
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: Invalid ID supplied
        '404':
          description: Order not found

  /api/v1/organization/{organizationId}/employee:
    post:
      tags:
        - employee
      summary: Add a new employee to organization
      description: Add a new employee
      operationId: addEmployee
      parameters:
        - name: organizationId
          description: organization ID
          schema:
            type: string
          in: path
          requered: true
        - name: employeeId
          description: Employee ID
          schema:
            type: string
          in: path
          requered: true
        - name: firstName
          description: Employee first name
          schema:
            type: string
          in: path
          requered: true
        - name: secondName
          description: Employee second name
          schema:
            type: string
          in: path
          requered: true
        - name: jobTitle
          description: Job Title of Employee
          schema:
            type: string
          in: path
          requered: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Employee'
        '400':
          description: Invalid input
        '422':
          description: Validation exception
  /api/v1/organization/{organizationId}/{employeeId}:
    put:
      tags:
        - employee
      summary: Update employee by organization Id
      description: Update a employee
      operationId: updateEmployee
      parameters:
        - name: organizationId
          description: organization ID
          schema:
            type: string
          in: path
          requered: true
        - name: employeeId
          description: Employee ID
          schema:
            type: string
          in: path
          requered: true
        - name: firstName
          description: Employee first name
          schema:
            type: string
          in: path
          requered: true
        - name: secondName
          description: Employee second name
          schema:
            type: string
          in: path
          requered: true
        - name: jobTitle
          description: Job Title of Employee
          schema:
            type: string
          in: path
          requered: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Employee'
        '400':
          description: Invalid input
        '422':
          description: Validation exception
    /api/v1/organization/{organizationId}:
      get:
        tags:
          - employee
      summary: Finds Employis of Organization
      description: Finds all Employis of Organization
      operationId: findEmployeeById
      parameters:
        - name: organizationId
          in: path
          description: ID of the organization that needs to be deleted
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Employee'

    /api/v1/organization/{organizationId}/{employeeId}:
      delete:
        tags:
          - employee
        summary: Delete employee by ID
        description: For valid response try integer IDs with value < 1000. Anything above 1000 or nonintegers will generate API errors
        operationId: deleteEmployee
        parameters:
          - name: organizationId
            in: path
            description: ID of the organization that needs to be deleted
            required: true
            schema:
              type: integer
              format: int64
          - name: employeeId
            in: path
            description: ID of the employee that needs to be deleted
            required: true
            schema:
              type: integer
              format: int64
        responses:
          '400':
            description: Invalid ID supplied
          '404':
            description: Order not found
      get:
        tags:
          - employee
        summary: Finds Employee by ID
        description: Finds Employee by ID
        operationId: findEmployeeById
        parameters:
          - name: organizationId
            in: path
            description: ID of the organization
            required: true
            schema:
              type: integer
              format: int64
          - name: employeeId
            in: path
            description: ID of the employee
            schema:
              type: integer
              format: int64
        responses:
          '200':
            description: successful operation
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Employee'
          '400':
            description: Invalid Id value

components:
  schemas:
    Organization:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        organizationName:
          type: string
          description: Organization Name
          example: Eureka
    Employee:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 100000
        organizationId:
          type: integer
          format: int64
          example: 100000
        firstName:
          type: string
          example: fehguy
        secondName:
          type: string
          example: fehguy
        jobTitle:
          type: string
          example: fehguy