openapi: 3.0.3
info:
  title: UI-Backend Organization-Employees API
  description: API for interaction between frontend and backend
  version: 1.0.0
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
tags:
  - name: organization
    description: Operations about organization
    externalDocs:
      description: Find out more
      url: http://swagger.io
  - name: employee
    description: Operations about employee
    externalDocs:
      description: Find out more about our store
      url: http://swagger.io
paths:
  /api/v1/organization:
    post:
      tags:
        - organization
      summary: Add a new organization
      description: Add a new organization
      operationId: addOrganization
      requestBody:
        description: Create a new organization
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Organization'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
        '400':
          description: Invalid input
        '422':
          description: Validation exception
    get:
      tags:
        - organization
      summary: Get all organizations
      description: For valid response no need to specify parameters
      operationId: getOrganizations
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Organization'
        '404':
          description: organizations not found
    delete:
      tags:
        - organization
      summary: Delete all organizations
      description: For valid response no need to specify parameters
      operationId: deleteOrganizations
      responses:
        '404':
          description: organizations not found

  /api/v1/organization/{organizationId}:
    put:
      tags:
        - organization
      summary: Update an existing organization
      description: Update an existing organization by Id
      operationId: updateOrganizationById
      parameters:
        - name: organizationId
          description: organization ID
          schema:
            type: string
          in: path
          required: true
        - name: organizationName
          description: organization name
          schema:
            type: string
          in: query
          required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
        '400':
          description: Invalid ID supplied
        '404':
          description: Organization not found
        '422':
          description: Validation exception
    get:
      tags:
        - organization
      summary: Find organization by ID
      description: Get an existing organization by Id
      operationId: getOrganizationById
      parameters:
        - name: organizationId
          description: organization ID
          schema:
            type: string
          in: path
          required: true
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
        '400':
          description: Invalid status value
    delete:
      tags:
        - organization
      summary: Delete organization by ID
      description: Delete organization by ID
      operationId: deleteOrganizationById
      parameters:
        - name: organizationId
          in: path
          description: ID of the organization that needs to be deleted
          required: true
          schema:
            type: string
      responses:
        '400':
          description: Invalid ID supplied
        '404':
          description: Organization not found

  /api/v1/employee:
    post:
      tags:
        - employee
      summary: Add a new employee to organization
      description: Add a new employee
      operationId: addEmployee
      parameters:
        - name: organizationId
          description: organization ID
          schema:
            type: string
          in: path
          required: true
        - name: firstName
          description: Employee first name
          schema:
            type: string
          in: query
          required: true
        - name: lastName
          description: Employee last name
          schema:
            type: string
          in: query
          required: true
        - name: jobTitle
          description: Job Title of Employee
          schema:
            type: string
          in: query
          required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Employee'
        '400':
          description: Invalid input
        '422':
          description: Validation exception
    get:
      tags:
        - employee
      summary: Get all employees
      description: For valid response no need to specify parameters
      operationId: getEmployees
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Employee'
        '404':
          description: Employees not found
    delete:
      tags:
        - employee
      summary: Delete all employees
      description: For valid response no need to specify parameters
      operationId: deleteEmployees
      responses:
        '404':
          description: Employees not found
  /api/v1/employee/{employeeId}:
    put:
      tags:
        - employee
      summary: Update employee by organization Id and employee Id
      description: Update a employee
      operationId: updateEmployeeById
      parameters:
        - name: employeeId
          description: Employee ID
          schema:
            type: string
          in: path
          required: true
        - name: organizationId
          description: Organization ID
          schema:
            type: string
          in: query
          required: true
        - name: firstName
          description: Employee first name
          schema:
            type: string
          in: query
          required: true
        - name: lastName
          description: Employee last name
          schema:
            type: string
          in: query
          required: true
        - name: jobTitle
          description: Job Title of Employee
          schema:
            type: string
          in: query
          required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Employee'
        '400':
          description: Invalid input
        '422':
          description: Validation exception
    get:
      tags:
        - employee
      summary: Get an employee by ID
      description: Get an employee by ID
      operationId: getEmployee
      parameters:
        - name: employeeId
          description: Employee ID
          schema:
            type: string
          in: path
          required: true
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Employee'
        '404':
          description: Employee not found
    delete:
      tags:
        - employee
      summary: Delete an employee by ID
      description: Delete an employee by ID
      operationId: deleteEmployee
      parameters:
        - name: employeeId
          description: Employee ID
          schema:
            type: string
          in: path
          required: true
      responses:
        '404':
          description: Employee not found

components:
  schemas:
    Organization:
      type: object
      properties:
        id:
          type: string
          nullable: false
          example: b749d000-9a4f-4bb7-8235-3e47779df243
        organizationName:
          type: string
          nullable: false
          description: Organization Name
          example: HHCorp
        employees:
          type: array
          items:
            $ref: '#/components/schemas/Employee'
      required:
        - organizationName
    Employee:
      type: object
      properties:
        id:
          type: string
          nullable: false
          example: e07bb9d0-d3ef-4c66-9b7d-5b5ee6e47167
        organizationId:
          type: string
          nullable: false
          example: b749d000-9a4f-4bb7-8235-3e47779df243
        firstName:
          type: string
          nullable: false
          example: Test
        lastName:
          type: string
          nullable: false
          example: De La Test
        jobTitle:
          type: string
          nullable: false
          example: Boss
      required:
        - organizationId
        - firstName
        - lastName
        - jobTitle